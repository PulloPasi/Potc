{
  "_fv": 73,
  "_type": "procedure",
  "definition": {
    "procedurexml": "<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"event_trigger\" deletable=\"false\" x=\"40\" y=\"40\"><field name=\"trigger\">no_ext_trigger</field><next><block type=\"java_code\"><field name=\"CODE\">package net.mcreator.cannon.procedures;&amp;#10;&amp;#10;import net.minecraft.world.level.block.FenceBlock;&amp;#10;import net.minecraft.world.entity.player.Player;&amp;#10;import net.minecraft.nbt.CompoundTag;&amp;#10;import net.minecraft.core.BlockPos;&amp;#10;import net.minecraft.server.level.ServerPlayer;&amp;#10;import net.minecraft.world.level.Level;&amp;#10;import net.minecraft.world.InteractionHand;&amp;#10;import net.minecraft.world.InteractionResult;&amp;#10;import net.minecraft.world.item.ItemStack;&amp;#10;&amp;#10;public class CustomLeadRightClickProcedure {&amp;#10;    public static InteractionResult execute(Level world, BlockPos pos, Player player, InteractionHand hand) {&amp;#10;        if (!(world.getBlockState(pos).getBlock() instanceof FenceBlock)) {&amp;#10;            return InteractionResult.PASS; // Ignore if not a fence&amp;#10;        }&amp;#10;&amp;#10;        ItemStack itemInHand = player.getItemInHand(hand);&amp;#10;        if (itemInHand.getItem() != net.mcreator.cannon.init.ModItems.CUSTOM_LEAD.get()) {&amp;#10;            return InteractionResult.PASS; // Ignore if not holding our custom lead&amp;#10;        }&amp;#10;&amp;#10;        if (!world.isClientSide) { // Server-side logic only&amp;#10;            CompoundTag playerData = player.getPersistentData();&amp;#10;&amp;#10;            if (!playerData.contains(\"firstFenceX\")) {&amp;#10;                // Store first fence position in player NBT&amp;#10;                playerData.putInt(\"firstFenceX\", pos.getX());&amp;#10;                playerData.putInt(\"firstFenceY\", pos.getY());&amp;#10;                playerData.putInt(\"firstFenceZ\", pos.getZ());&amp;#10;&amp;#10;                if (player instanceof ServerPlayer serverPlayer) {&amp;#10;                    serverPlayer.displayClientMessage(\"First fence selected!\", true);&amp;#10;                }&amp;#10;            } else {&amp;#10;                // Second fence clicked â†’ Spawn Rope&amp;#10;                int x1 = playerData.getInt(\"firstFenceX\");&amp;#10;                int y1 = playerData.getInt(\"firstFenceY\");&amp;#10;                int z1 = playerData.getInt(\"firstFenceZ\");&amp;#10;&amp;#10;                BlockPos firstFencePos = new BlockPos(x1, y1, z1);&amp;#10;                BlockPos secondFencePos = pos;&amp;#10;&amp;#10;                // Call the procedure to spawn the rope&amp;#10;                SpawnRopeBetweenFencesProcedure.execute(world, firstFencePos, secondFencePos);&amp;#10;&amp;#10;                // Clear stored fence position from NBT&amp;#10;                playerData.remove(\"firstFenceX\");&amp;#10;                playerData.remove(\"firstFenceY\");&amp;#10;                playerData.remove(\"firstFenceZ\");&amp;#10;            }&amp;#10;        }&amp;#10;        return InteractionResult.SUCCESS;&amp;#10;    }&amp;#10;}&amp;#10;</field></block></next></block></xml>"
  }
}